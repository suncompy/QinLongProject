<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shenhesoft.logistics.manage.mapper.TbFinanceAccountMapper" >
  <resultMap id="BaseResultMap" type="com.shenhesoft.logistics.manage.pojo.financeAccount.TbFinanceAccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="account_opening_time" property="accountOpeningTime" jdbcType="TIMESTAMP" />
    <result column="account_kind" property="accountKind" jdbcType="TINYINT" />
    <result column="account_type" property="accountType" jdbcType="TINYINT" />
    <result column="choose_account_id" property="chooseAccountId" jdbcType="INTEGER" />
    <result column="start_account_balance" property="startAccountBalance" jdbcType="DECIMAL" />
    <result column="account_balance" property="accountBalance" jdbcType="DECIMAL" />
    <result column="vigilance_amount" property="vigilanceAmount" jdbcType="DECIMAL" />
    <result column="non_use_amount" property="nonUseAmount" jdbcType="DECIMAL" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="account_num" property="accountNum" jdbcType="VARCHAR" />
    <result column="open_bank" property="openBank" jdbcType="VARCHAR" />
    <result column="bank_num" property="bankNum" jdbcType="VARCHAR" />
    <result column="tax_identification_number" property="taxIdentificationNumber" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, account_opening_time, account_kind, account_type, choose_account_id, start_account_balance, 
    account_balance, vigilance_amount, non_use_amount, account_name, account_num, open_bank, 
    bank_num, tax_identification_number, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shenhesoft.logistics.manage.pojo.financeAccount.TbFinanceAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_finance_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_finance_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_finance_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shenhesoft.logistics.manage.pojo.financeAccount.TbFinanceAccountExample" >
    delete from tb_finance_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shenhesoft.logistics.manage.pojo.financeAccount.TbFinanceAccount" >
    insert into tb_finance_account (id, name, account_opening_time, 
      account_kind, account_type, choose_account_id, 
      start_account_balance, account_balance, vigilance_amount, 
      non_use_amount, account_name, account_num, 
      open_bank, bank_num, tax_identification_number, 
      status)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{accountOpeningTime,jdbcType=TIMESTAMP}, 
      #{accountKind,jdbcType=TINYINT}, #{accountType,jdbcType=TINYINT}, #{chooseAccountId,jdbcType=INTEGER}, 
      #{startAccountBalance,jdbcType=DECIMAL}, #{accountBalance,jdbcType=DECIMAL}, #{vigilanceAmount,jdbcType=DECIMAL}, 
      #{nonUseAmount,jdbcType=DECIMAL}, #{accountName,jdbcType=VARCHAR}, #{accountNum,jdbcType=VARCHAR}, 
      #{openBank,jdbcType=VARCHAR}, #{bankNum,jdbcType=VARCHAR}, #{taxIdentificationNumber,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.shenhesoft.logistics.manage.pojo.financeAccount.TbFinanceAccount" >
    <selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
    insert into tb_finance_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="accountOpeningTime != null" >
        account_opening_time,
      </if>
      <if test="accountKind != null" >
        account_kind,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="chooseAccountId != null" >
        choose_account_id,
      </if>
      <if test="startAccountBalance != null" >
        start_account_balance,
      </if>
      <if test="accountBalance != null" >
        account_balance,
      </if>
      <if test="vigilanceAmount != null" >
        vigilance_amount,
      </if>
      <if test="nonUseAmount != null" >
        non_use_amount,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="accountNum != null" >
        account_num,
      </if>
      <if test="openBank != null" >
        open_bank,
      </if>
      <if test="bankNum != null" >
        bank_num,
      </if>
      <if test="taxIdentificationNumber != null" >
        tax_identification_number,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="accountOpeningTime != null" >
        #{accountOpeningTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountKind != null" >
        #{accountKind,jdbcType=TINYINT},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=TINYINT},
      </if>
      <if test="chooseAccountId != null" >
        #{chooseAccountId,jdbcType=INTEGER},
      </if>
      <if test="startAccountBalance != null" >
        #{startAccountBalance,jdbcType=DECIMAL},
      </if>
      <if test="accountBalance != null" >
        #{accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="vigilanceAmount != null" >
        #{vigilanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="nonUseAmount != null" >
        #{nonUseAmount,jdbcType=DECIMAL},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountNum != null" >
        #{accountNum,jdbcType=VARCHAR},
      </if>
      <if test="openBank != null" >
        #{openBank,jdbcType=VARCHAR},
      </if>
      <if test="bankNum != null" >
        #{bankNum,jdbcType=VARCHAR},
      </if>
      <if test="taxIdentificationNumber != null" >
        #{taxIdentificationNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shenhesoft.logistics.manage.pojo.financeAccount.TbFinanceAccountExample" resultType="java.lang.Integer" >
    select count(*) from tb_finance_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_finance_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.accountOpeningTime != null" >
        account_opening_time = #{record.accountOpeningTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountKind != null" >
        account_kind = #{record.accountKind,jdbcType=TINYINT},
      </if>
      <if test="record.accountType != null" >
        account_type = #{record.accountType,jdbcType=TINYINT},
      </if>
      <if test="record.chooseAccountId != null" >
        choose_account_id = #{record.chooseAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.startAccountBalance != null" >
        start_account_balance = #{record.startAccountBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.accountBalance != null" >
        account_balance = #{record.accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.vigilanceAmount != null" >
        vigilance_amount = #{record.vigilanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.nonUseAmount != null" >
        non_use_amount = #{record.nonUseAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.accountName != null" >
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountNum != null" >
        account_num = #{record.accountNum,jdbcType=VARCHAR},
      </if>
      <if test="record.openBank != null" >
        open_bank = #{record.openBank,jdbcType=VARCHAR},
      </if>
      <if test="record.bankNum != null" >
        bank_num = #{record.bankNum,jdbcType=VARCHAR},
      </if>
      <if test="record.taxIdentificationNumber != null" >
        tax_identification_number = #{record.taxIdentificationNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_finance_account
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      account_opening_time = #{record.accountOpeningTime,jdbcType=TIMESTAMP},
      account_kind = #{record.accountKind,jdbcType=TINYINT},
      account_type = #{record.accountType,jdbcType=TINYINT},
      choose_account_id = #{record.chooseAccountId,jdbcType=INTEGER},
      start_account_balance = #{record.startAccountBalance,jdbcType=DECIMAL},
      account_balance = #{record.accountBalance,jdbcType=DECIMAL},
      vigilance_amount = #{record.vigilanceAmount,jdbcType=DECIMAL},
      non_use_amount = #{record.nonUseAmount,jdbcType=DECIMAL},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      account_num = #{record.accountNum,jdbcType=VARCHAR},
      open_bank = #{record.openBank,jdbcType=VARCHAR},
      bank_num = #{record.bankNum,jdbcType=VARCHAR},
      tax_identification_number = #{record.taxIdentificationNumber,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shenhesoft.logistics.manage.pojo.financeAccount.TbFinanceAccount" >
    update tb_finance_account
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="accountOpeningTime != null" >
        account_opening_time = #{accountOpeningTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountKind != null" >
        account_kind = #{accountKind,jdbcType=TINYINT},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=TINYINT},
      </if>
      <if test="chooseAccountId != null" >
        choose_account_id = #{chooseAccountId,jdbcType=INTEGER},
      </if>
      <if test="startAccountBalance != null" >
        start_account_balance = #{startAccountBalance,jdbcType=DECIMAL},
      </if>
      <if test="accountBalance != null" >
        account_balance = #{accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="vigilanceAmount != null" >
        vigilance_amount = #{vigilanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="nonUseAmount != null" >
        non_use_amount = #{nonUseAmount,jdbcType=DECIMAL},
      </if>
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountNum != null" >
        account_num = #{accountNum,jdbcType=VARCHAR},
      </if>
      <if test="openBank != null" >
        open_bank = #{openBank,jdbcType=VARCHAR},
      </if>
      <if test="bankNum != null" >
        bank_num = #{bankNum,jdbcType=VARCHAR},
      </if>
      <if test="taxIdentificationNumber != null" >
        tax_identification_number = #{taxIdentificationNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shenhesoft.logistics.manage.pojo.financeAccount.TbFinanceAccount" >
    update tb_finance_account
    set name = #{name,jdbcType=VARCHAR},
      account_opening_time = #{accountOpeningTime,jdbcType=TIMESTAMP},
      account_kind = #{accountKind,jdbcType=TINYINT},
      account_type = #{accountType,jdbcType=TINYINT},
      choose_account_id = #{chooseAccountId,jdbcType=INTEGER},
      start_account_balance = #{startAccountBalance,jdbcType=DECIMAL},
      account_balance = #{accountBalance,jdbcType=DECIMAL},
      vigilance_amount = #{vigilanceAmount,jdbcType=DECIMAL},
      non_use_amount = #{nonUseAmount,jdbcType=DECIMAL},
      account_name = #{accountName,jdbcType=VARCHAR},
      account_num = #{accountNum,jdbcType=VARCHAR},
      open_bank = #{openBank,jdbcType=VARCHAR},
      bank_num = #{bankNum,jdbcType=VARCHAR},
      tax_identification_number = #{taxIdentificationNumber,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectAccountList"  parameterType="com.shenhesoft.logistics.manage.pojo.financeAccount.TbFinanceAccountExample" resultType="com.shenhesoft.logistics.manage.pojo.financeAccount.TbFinanceAccount" >
	SELECT
		A.id AS id,
		A. name AS name,
		A.account_opening_time AS accountOpeningTime,
		A.account_kind AS accountKind,
		A.account_type AS accountType,
		A.choose_account_id AS chooseAccountId,
		A.start_account_balance AS startAccountBalance,
		A.account_balance AS accountBalance,
		A.vigilance_amount AS vigilanceAmount,
		A.non_use_amount AS nonUseAmount,
		A.account_name AS accountName,
		A.account_num AS accountNum,
		A.open_bank AS openBank,
		A.bank_num AS bankNum,
		A.tax_identification_number AS taxIdentificationNumber,
		A.status AS status
	FROM
		tb_finance_account A,
		tb_branch_group_link y
	<if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
		 and A.id=y.row_id 
	<if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="showAccountList"  parameterType="com.shenhesoft.logistics.manage.pojo.financeAccount.TbFinanceAccountExample" resultType="com.shenhesoft.logistics.manage.helpPojo.AccountManagementDetail" >
	SELECT
		A.id AS id,
		A. NAME AS NAME,
		A.account_opening_time AS accountOpeningTime,
		A.account_type AS accountType,
		A.account_balance AS accountBalance,
		A.vigilance_amount AS vigilanceAmount,
		A.non_use_amount AS nonUseAmount,
		A.account_name AS accountName,
		A.account_num AS accountNum,
		A.open_bank AS openBank,
		A.bank_num AS bankNum,
		B. NAME AS branchGroupName,
		B.address AS branchGroupAddress
	FROM
		tb_finance_account A,
		tb_branch_group B
	<if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    AND	
		A.branch_group_id = B.id
	<if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
	<!-- ORDER BY
		A.id ASC -->
  </select>
  
  		<select id="selectCustomserListByType"  resultType="com.shenhesoft.logistics.manage.pojo.customer.TbCustomer" >
			SELECT
				id AS id,
				company_name AS companyName
			FROM
				tb_customer 
			where status = 0
			order by id desc
		 </select>
		 
		 <select id="selectTrainStationListByType"  resultType="com.shenhesoft.logistics.manage.pojo.trainStation.TbTrainStation" >
			SELECT
				id AS id,
				station_name AS stationName
			FROM
				tb_train_station 
			where station_level = 1 and delete_flag = 0
			order by id desc
		 </select>
		 
		 <select id="selectCustomserNameById"  parameterType="java.lang.Integer" resultType="java.lang.String" >
			SELECT
				company_name AS companyName
			FROM
				tb_customer 
			where status = 0 and id = #{id,jdbcType=INTEGER}
		 </select>
		 
		 <select id="selectTrainStationNameById"  parameterType="java.lang.Integer" resultType="java.lang.String" >
			SELECT
				station_name AS stationName
			FROM
				tb_train_station 
			where id = #{id,jdbcType=INTEGER} and delete_flag = 0
		 </select>
		 
		 <select id="selectCustomserByTypeAndId" parameterType="java.lang.Integer" resultType="com.shenhesoft.logistics.manage.pojo.customer.TbCustomer" >
			
			SELECT
				id AS id,
				company_name AS companyName,
				duty_paragraph AS dutyParagraph
			FROM
				tb_customer 
			where status = 0 and id = #{id,jdbcType=INTEGER}
		 </select>
		 
		 <select id="selectTrainStationByTypeAndId" parameterType="java.lang.Integer" resultType="com.shenhesoft.logistics.manage.pojo.trainStation.TbTrainStation" >
			SELECT
				id AS id,
				station_name AS stationName,
				duty_paragraph AS dutyParagraph
			FROM
				tb_train_station 
			where id = #{id,jdbcType=INTEGER} and delete_flag = 0
		 </select>
		 
		 <select id="selectBranchGroupByTypeAndId" parameterType="java.lang.Integer" resultType="com.shenhesoft.logistics.manage.pojo.branchgroup.TbBranchGroup" >
			SELECT
				id AS id,
				name AS name,
				duty_paragraph AS dutyParagraph
			FROM
				tb_branch_group 
			where id = #{id,jdbcType=INTEGER} and status = 1
		 </select>
		 
		 <update id="deleteAccountByPrimaryKey" parameterType="java.lang.Integer" >
		    update tb_finance_account
		    set status = 1
		    where id = #{id,jdbcType=INTEGER},
	  </update>
	  
	  <!-- 账户详情 中预付款的金额操作明细 -->
	  <select id="selectAccountDetailById" parameterType="java.lang.Integer" resultType="com.shenhesoft.logistics.manage.pojo.financeAccount.TbAccountRecordDetail" >
			select project_id projectId,project_code projectCode,
			SUM(cunru) depositAmount,SUM(diyong) purposeAmount,SUM(tuikuan) cashAmount ,(SUM(cunru)-SUM(diyong)-SUM(tuikuan)) blance 
			from 
			(select type,project_id,project_code,
				CASE WHEN type = 0 THEN amount ELSE 0 END AS cunru ,
				CASE WHEN type = 1 THEN amount ELSE 0 END AS diyong ,
				CASE WHEN type = 2 THEN amount ELSE 0 END AS tuikuan 
				from tb_account_record_detail WHERE account_id = #{id,jdbcType=INTEGER}
				AND delete_flag = 0) tmp 
			GROUP BY project_id 
		 </select>
		 
		<insert id="addAccountRecordDetail" parameterType="com.shenhesoft.logistics.manage.pojo.financeAccount.TbAccountRecordDetail" >
		    insert into tb_account_record_detail
		    <trim prefix="(" suffix=")" suffixOverrides="," >
		      <if test="id != null" >
		        id,
		      </if>
		      <if test="projectId != null" >
		        project_id,
		      </if>
		      <if test="projectCode != null" >
		        project_code,
		      </if>
		      <if test="accountId != null" >
		        account_id,
		      </if>
		      <if test="amount != null" >
		        amount,
		      </if>
		      <if test="type != null" >
		        type,
		      </if>
		      <if test="deleteFlag != null" >
		        delete_flag,
		      </if>
		    </trim>
		    <trim prefix="values (" suffix=")" suffixOverrides="," >
		      <if test="id != null" >
		        #{id,jdbcType=VARCHAR},
		      </if>
		      <if test="projectId != null" >
		        #{projectId,jdbcType=INTEGER},
		      </if>
		      <if test="projectCode != null" >
		        #{projectCode,jdbcType=VARCHAR},
		      </if>
		      <if test="accountId != null" >
		        #{accountId,jdbcType=INTEGER},
		      </if>
		      <if test="amount != null" >
		        #{amount,jdbcType=DECIMAL},
		      </if>
		      <if test="type != null" >
		        #{type,jdbcType=INTEGER},
		      </if>
		      <if test="deleteFlag != null" >
		        #{deleteFlag,jdbcType=TINYINT},
		      </if>
		    </trim>
		  </insert>
</mapper>