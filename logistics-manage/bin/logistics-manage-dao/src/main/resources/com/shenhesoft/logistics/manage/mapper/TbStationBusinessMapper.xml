<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 <mapper namespace="com.shenhesoft.logistics.manage.mapper.TbStationBusinessMapper" >
  <resultMap id="BaseResultMap" type="com.shenhesoft.logistics.manage.pojo.stationBusiness.TbStationBusiness" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="relate_id" property="relateId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="relate_project_id" property="relateProjectId" jdbcType="INTEGER" />
    <result column="relate_project_code" property="relateProjectCode" jdbcType="VARCHAR" />
    <result column="area_code" property="areaCode" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="stage" property="stage" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
   <resultMap id="BaseResultMap2" type="com.shenhesoft.logistics.manage.helpPojo.TbStationBusinessHelp" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="relate_id" property="relateId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="relate_project_id" property="relateProjectId" jdbcType="INTEGER" />
    <result column="relate_project_code" property="relateProjectCode" jdbcType="VARCHAR" />
    <result column="area_code" property="areaCode" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, relate_id, name, department, job, phone, relate_project_id, relate_project_code, 
    area_code, location, stage, type, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shenhesoft.logistics.manage.pojo.stationBusiness.TbStationBusinessExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_station_business
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_station_business
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_station_business
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shenhesoft.logistics.manage.pojo.stationBusiness.TbStationBusinessExample" >
    delete from tb_station_business
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shenhesoft.logistics.manage.pojo.stationBusiness.TbStationBusiness" >
    insert into tb_station_business (id, relate_id, name, 
      department, job, phone, 
      relate_project_id, relate_project_code, area_code, 
      location, stage, type, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{relateId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{department,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{relateProjectId,jdbcType=INTEGER}, #{relateProjectCode,jdbcType=VARCHAR}, #{areaCode,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{stage,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shenhesoft.logistics.manage.pojo.stationBusiness.TbStationBusiness" >
    insert into tb_station_business
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="relateId != null" >
        relate_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="relateProjectId != null" >
        relate_project_id,
      </if>
      <if test="relateProjectCode != null" >
        relate_project_code,
      </if>
      <if test="areaCode != null" >
        area_code,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="stage != null" >
        stage,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="relateId != null" >
        #{relateId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="relateProjectId != null" >
        #{relateProjectId,jdbcType=INTEGER},
      </if>
      <if test="relateProjectCode != null" >
        #{relateProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null" >
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="stage != null" >
        #{stage,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shenhesoft.logistics.manage.pojo.stationBusiness.TbStationBusinessExample" resultType="java.lang.Integer" >
    select count(*) from tb_station_business
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_station_business
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.relateId != null" >
        relate_id = #{record.relateId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null" >
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.relateProjectId != null" >
        relate_project_id = #{record.relateProjectId,jdbcType=INTEGER},
      </if>
      <if test="record.relateProjectCode != null" >
        relate_project_code = #{record.relateProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="record.areaCode != null" >
        area_code = #{record.areaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.stage != null" >
        stage = #{record.stage,jdbcType=TINYINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_station_business
    set id = #{record.id,jdbcType=INTEGER},
      relate_id = #{record.relateId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      relate_project_id = #{record.relateProjectId,jdbcType=INTEGER},
      relate_project_code = #{record.relateProjectCode,jdbcType=VARCHAR},
      area_code = #{record.areaCode,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      stage = #{record.stage,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shenhesoft.logistics.manage.pojo.stationBusiness.TbStationBusiness" >
    update tb_station_business
    <set >
      <if test="relateId != null" >
        relate_id = #{relateId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="relateProjectId != null" >
        relate_project_id = #{relateProjectId,jdbcType=INTEGER},
      </if>
      <if test="relateProjectCode != null" >
        relate_project_code = #{relateProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null" >
        area_code = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="stage != null" >
        stage = #{stage,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shenhesoft.logistics.manage.pojo.stationBusiness.TbStationBusiness" >
    update tb_station_business
    set relate_id = #{relateId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      relate_project_id = #{relateProjectId,jdbcType=INTEGER},
      relate_project_code = #{relateProjectCode,jdbcType=VARCHAR},
      area_code = #{areaCode,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      stage = #{stage,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!--  -->
  <select id="selectTbStationBusinessByExample" resultMap="BaseResultMap2" 
  parameterType="com.shenhesoft.logistics.manage.pojo.stationBusiness.TbStationBusinessExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_station_business
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>